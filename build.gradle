buildscript {
    repositories {
        mavenCentral()
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://plugins.gradle.org/m2' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
}
}
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


version = '1.3.0'
group = 'com.goldenfield192.irpatches' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'IRPatches'

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'
    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = 'stable_39'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

jar.manifest.attributes(
        'FMLCorePluginContainsFMLMod': true,
        'FMLCorePlugin': 'com.goldenfield192.irpatches.IRPEarlyMixinLoader',
        'ForceLoadAsMod': true,
        'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker'
)

repositories {
    mavenCentral()
    maven { url = 'https://repo.spongepowered.org/maven'}
    maven {
        url 'https://maven.cleanroommc.com'
    }
    maven { url = "https://teamopenindustry.cc/maven" }
    maven { url = "http://maven.cil.li/" }
    maven {
        name = "SquidDev"
        url = "https://squiddev.cc/maven/"
    }
    maven {
        url "https://cursemaven.com"
    }
}

dependencies {
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile 'some.group:artifact:version:classifier'
    //compile 'some.group:artifact:version'
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // the 'provided' configuration is for optional dependencies that exist at compile-time but might not at runtime.
    //provided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // the deobf configurations:  'deobfCompile' and 'deobfProvided' are the same as the normal compile and provided,
    // except that these dependencies get remapped to your current MCP mappings
    //deobfCompile 'com.mod-buildcraft:buildcraft:6.0.8:dev'
    //deobfProvided 'com.mod-buildcraft:buildcraft:6.0.8:dev'

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

    annotationProcessor 'org.ow2.asm:asm-debug-all:5.2'
    annotationProcessor 'com.google.guava:guava:32.1.2-jre'
    annotationProcessor 'com.google.code.gson:gson:2.8.9'

    // ForgeGradle:
    compile ('zone.rong:mixinbooter:9.1') {
        transitive = false
    }
    annotationProcessor ('zone.rong:mixinbooter:9.1') {
        transitive = false
    }

    compile "curse.maven:ImmersiveEngineering-231951:2974106"
    compile files('D:\\cache\\.gradle\\caches\\modules-2\\files-2.1\\cam72cam.immersiverailroading\\ImmersiveRailroading\\1.12.2-forge-1.10.0-d0a7dd0\\cce5feabc9f5fb3f8a9a55bc235ab6fb93ca797a\\IRTest.jar')
    compile 'cam72cam.universalmodcore:UniversalModCore:1.12.2-forge-1.2.1-43860b4'
    compile 'trackapi:TrackAPI:1.12.2-forge-1.2'
}

mixin {
    add sourceSets.main, 'mixins.irpatches.refmap.json'
}

reobf {
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}